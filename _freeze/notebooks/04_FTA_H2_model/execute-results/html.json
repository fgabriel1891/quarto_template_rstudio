{
  "hash": "57b9cb054ab4ac60a4c29c987ea02b0a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modelling the effect of FTA in H2\"\nformat: \n  html:\n    theme: \"flatly\" # A clean, flat theme suitable for scientific documents\n    toc: true # Enables table of contents\n    toc-depth: 3 # Adjusts depth of table of contents; change as needed\n    number-sections: true # Enables section numbering\n    fig-width: 6 # Sets default figure width to 6 inches\n    fig-height: 4 # Sets default figure height to 4 inches\n    fig-align: \"center\" # Centers figures\neditor: visual\nexecute:\n  eval: false\n  echo: true\n---\n\n\n# Get the influence of asymmetry in network specialization\n\n## Observed relationship\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## compute the differences for all combinations \n\n\nfull_fta <-\n  1:nrow(fr_norm_palms) |>\n  map(function(row){\n    expand.grid(\n      fr_norm_palms[row,] |> dplyr::select(!grid) |> as.numeric(),\n      fr_norm_mammals[row,] |> dplyr::select(!grid) |> as.numeric()) |>\n      mutate(lab = expand.grid(1:7, 1:7) |> \n               mutate(label = paste0('p', Var1, 'm', Var2)) |> \n               dplyr::pull(label) ) |>\n      mutate(fta = abs(Var1 - Var2)) |>\n      mutate(grid = fr_norm_palms$grid[row])\n    \n    \n    \n  }) |>\n  bind_rows()\n\n\n\n\nmy_fta_h2 <- \nfull_fta |>\n  left_join(h2_grid, 'grid')\n\n\nmy_fta_h2_sum <-\nmy_fta_h2 |>\n  group_by(grid) |>\n  summarise(mean_fta = mean(fta, na.rm = T), \n            sd_fta = sd(fta, na.rm = T),\n            h2 = mean(h2))\n\nobs_model1 <- lm(h2~mean_fta+sd_fta, data = my_fta_h2_sum)\n\nsjPlot::tab_model(obs_model1)\n\nsaveRDS(obs_model1, '00_Data/04_models/obs_model1.RDS')\n```\n:::\n\n\n## Expected relationship\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsaveRDS(full_fta_expected, file = '00_Data/02_species_interactions/full_fta_expected.RDS')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Get the distribution of expected coefficients between simulated fta and h2 \n\nfull_fta_expected <- \nfull_fta_expected |>\n  group_by(grid,lab) |>\n  mutate(rep = rep(1:50))\n\n\ndim(full_fta_expected)\n\n\nhead(full_fta_expected)\nh2_mod_fta <- \n  full_fta_expected |>\n  group_by(grid, rep) |>\n  summarise(mean_fta = mean(fta, na.rm = T), \n            sd_fta = sd(fta, na.rm = T),\n            h2_obs = mean(h2_obs))|>\n  group_map(~{\n    lm(h2_obs~mean_fta+sd_fta, data = .x) })\n\n\nh2_mod_fta_coef <- \nh2_mod_fta |>\n  map(~coef(.x)) |> \n  bind_rows() \n\nh2_mod_fta |> map(~vegan::RsquareAdj(.x)[[1]]) |> unlist()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nvline_positions <- obs_model1 |> coef() |> data.frame()\nvline_positions$variable <- rownames(vline_positions)\nnames(vline_positions) <- c('value', 'variable')\n\ncustom_labels <- c(\"(Intercept)\" = \"Model Intercept\",\n                   \"mean_fta\" = \"FTA (mean)\", \n                   \"sd_fta\" = \"FTA (sd)\")\n\n\nh2_mod_fta_coef |>\n reshape2::melt() |> \n  ggplot() +\n  geom_histogram(aes(value)) + \n  facet_wrap(~variable, labeller = as_labeller(custom_labels))  +\n  geom_vline(data = vline_positions, aes(xintercept = value),\n             color = \"red\", linetype = 1, size = 1) +\n  theme_minimal() +\n  ylab('Frequency count') + \n  xlab('Model estimate')\n```\n:::\n",
    "supporting": [
      "04_FTA_H2_model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}